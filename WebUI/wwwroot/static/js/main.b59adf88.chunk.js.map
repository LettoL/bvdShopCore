{"version":3,"sources":["hooks/http.hook.js","const.js","components/import-form/form.js","pages/admin/import.page.js","pages/admin/products.page.js","pages/admin/products-history.page.js","pages/admin/managers.page.js","components/menu/menu.js","components/layouts/admin.layout.js","contexts/auth.context.js","App.js","routes.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","Constants","Form","props","Grid","item","xs","TextField","label","multiline","rows","variant","value","productsText","onChange","productsTextChange","name","fullWidth","Button","color","onClick","productsTextHandle","products","map","product","key","number","code","title","amount","price","sum","ImportPage","setProducts","form","setForm","split","productsProperties","x","replace","event","target","API","ProductsPage","classes","useStyles","page","setPage","rowsPerPage","setRowsPerPage","shop","setShop","category","setCategory","setTitle","shops","setShops","categories","setCategories","getProducts","getShops","getCategories","useEffect","FormControl","className","formControl","InputLabel","id","Select","labelId","MenuItem","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","filter","row","shopId","categoryId","toLowerCase","includes","slice","TablePagination","rowsPerPageOptions","component","count","length","onChangePage","newPage","onChangeRowsPerPage","makeStyles","theme","margin","spacing","minWidth","selectEmpty","marginTop","ProductsHistory","startDate","setStartDate","endDate","setEndDate","date","Date","dateTime","type","defaultValue","textField","InputLabelProps","shrink","toLocaleDateString","productTitle","supplierName","shopTitle","ManagersPage","managers","setManagers","getManagers","Menu","List","ListItem","button","to","ListItemText","primary","root","flexGrow","AdminLayout","container","AuthContext","createContext","userId","userRole","isAuth","App","routes","path","exact","useCookies","cookie","console","log","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b59adf88.chunk.js","sourcesContent":["import {useCallback, useState} from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState(null)\r\n  \r\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n    setLoading(true)\r\n    try {\r\n      if(body) {\r\n        body = JSON.stringify(body)\r\n        headers['Content-Type'] = 'application/json'\r\n      }\r\n      \r\n      const response = await fetch(url, {method, body, headers})\r\n      const data = await response.json()\r\n      \r\n      if(!response.ok) {\r\n        throw new Error(data.message || 'Что-то не так')\r\n      }\r\n      \r\n      setLoading(false)\r\n      \r\n      return data;\r\n    } \r\n    catch (e) {\r\n      setLoading(false)\r\n      setError(e.message)\r\n      throw e\r\n    }\r\n  }, [])\r\n  \r\n  const clearError = useCallback(() => setError(null), [])\r\n  return {loading, request, error, clearError}\r\n}","export const Constants = {\r\n  //API: 'http://68.183.78.15/'\r\n  API: 'http://localhost:5000/'\r\n}","import React, {Fragment} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nexport const Form = (props) => {\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          label=\"Внесите товары\"\r\n          multiline\r\n          rows={10}\r\n          variant=\"outlined\"\r\n          value={props.productsText}\r\n          onChange={props.productsTextChange}\r\n          name=\"products\"\r\n          fullWidth\r\n        />\r\n        <br/>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={props.productsTextHandle}\r\n        >\r\n          Обработать\r\n        </Button>\r\n      </Grid>\r\n      <Grid item xs={5}>\r\n        <ul>\r\n          {props.products.map(product => (\r\n            <li key={product.number}>\r\n              {product.number}\r\n              {product.code}\r\n              {product.title}\r\n              {product.amount}\r\n              {product.price}\r\n              {product.sum}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </Grid>\r\n    </Fragment>\r\n  )\r\n}","import React, {useState} from \"react\";\r\nimport {useHttp} from \"../../hooks/http.hook\";\r\nimport {Constants} from \"../../const\";\r\nimport {Form} from \"../../components/import-form/form\";\r\n\r\nconst API = Constants.API\r\n\r\nexport const ImportPage = () => {\r\n  const {request} = useHttp()\r\n  const [products, setProducts] = useState([])\r\n  \r\n  const [form, setForm] = useState({\r\n    products: ''\r\n  })\r\n  \r\n  const changeHandler = event => {\r\n    setForm({...form, [event.target.name]: event.target.value})\r\n  }\r\n  \r\n  const productsTextHandle = async () => {\r\n    const productsText = form.products.split('\\n');\r\n    const productsProperties = productsText.map(x => x.split(';'));\r\n    \r\n    const products = productsProperties.map(x => {\r\n      return {\r\n        number: +(x[0].replace(',', '.').replace(/\\s+/g,'')),\r\n        code: x[1],\r\n        title: x[2],\r\n        amount: +(x[3].replace(',', '.').replace(/\\s+/g,'')),\r\n        price: +(x[5].replace(',', '.').replace(/\\s+/g,'')),\r\n        sum: +(x[6].replace(',', '.').replace(/\\s+/g,''))\r\n      }\r\n    });\r\n\r\n    setProducts(products)\r\n    \r\n    /*const data = await request(API + 'api/supplyProducts/import', 'POST', {\r\n      products: products\r\n    })*/\r\n  }\r\n  \r\n  return (\r\n    <Form\r\n      products={products}\r\n      productsText={form.products}\r\n      productsTextChange={changeHandler}\r\n      productsTextHandle={productsTextHandle}\r\n    />\r\n  )\r\n}","import React, {useCallback, useEffect, useState} from 'react'\r\nimport {useHttp} from \"../../hooks/http.hook\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {Constants} from \"../../const\";\r\n\r\nconst API = Constants.API\r\n\r\nexport const ProductsPage = () => {\r\n  const classes = useStyles();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [shop, setShop] = useState(0);\r\n  const [category, setCategory] = useState(0);\r\n  const [title, setTitle] = useState('');\r\n\r\n  const {loading, request} = useHttp()\r\n  const [products, setProducts] = useState([]);\r\n  const [shops, setShops] = useState([])\r\n  const [categories, setCategories] = useState([])\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeShop = (event) => {\r\n    setShop(event.target.value);\r\n  };\r\n\r\n  const handleChangeCategory = event => {\r\n    setCategory(event.target.value)\r\n  }\r\n\r\n  const handleChangeTitle = event => {\r\n    setTitle(event.target.value)\r\n  }\r\n\r\n  const getProducts = useCallback(async () => {\r\n    try {\r\n      const data = await request(API + 'api/products')\r\n      setProducts(data)\r\n    }\r\n    catch (e) {}\r\n  }, [request])\r\n\r\n  const getShops = useCallback(async () => {\r\n    try {\r\n      const data = await request(API + 'api/shops')\r\n      setShops(data)\r\n    }\r\n    catch (e) {}\r\n  }, [request])\r\n\r\n  const getCategories = useCallback(async () => {\r\n    try {\r\n      const data = await request(API + 'api/categories')\r\n      setCategories(data)\r\n    }\r\n    catch (e) {\r\n    }\r\n  }, [request])\r\n\r\n  useEffect(() => {\r\n    getProducts()\r\n    getShops()\r\n    getCategories()\r\n  }, [getProducts, getShops, getCategories])\r\n\r\n  if(loading)\r\n    return (\r\n      <div>Загрузка...</div>\r\n    )\r\n  else\r\n    return (\r\n      <>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id=\"demo-simple-select-label\">Магазин</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={shop}\r\n            onChange={handleChangeShop}\r\n          >\r\n            <MenuItem value={0}>Выбрать магазин</MenuItem>\r\n            {shops.map(shop => (\r\n              <MenuItem key={shop.id} value={shop.id}>{shop.title}</MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id=\"demo-simple-select-label\">Категория</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={category}\r\n            onChange={handleChangeCategory}\r\n          >\r\n            <MenuItem value={0}>Выбрать категорию</MenuItem>\r\n            {categories.map(category => (\r\n              <MenuItem key={category.id} value={category.id}>{category.title}</MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={classes.formControl}>\r\n          <TextField\r\n            label=\"Поиск по названию\"\r\n            onChange={handleChangeTitle}\r\n          />\r\n        </FormControl>\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Артикул</TableCell>\r\n                <TableCell>Название</TableCell>\r\n                <TableCell>Количество</TableCell>\r\n                <TableCell>Цена</TableCell>\r\n                <TableCell>Магазин</TableCell>\r\n                <TableCell>Категория</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {products\r\n                .filter(row => shop !== 0\r\n                  ? row.shopId === shop\r\n                  : true)\r\n                .filter(row => category !== 0\r\n                  ? row.categoryId === category\r\n                  : true)\r\n                .filter(row => title !== ''\r\n                  ? row.title.toLowerCase().includes(title.toLowerCase())\r\n                  : true)\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map(row => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell>{row.code}</TableCell>\r\n                  <TableCell>{row.title}</TableCell>\r\n                  <TableCell>{row.amount}</TableCell>\r\n                  <TableCell>{row.price}</TableCell>\r\n                  <TableCell>{row.shop}</TableCell>\r\n                  <TableCell>{row.category}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 50, 100]}\r\n          component='div'\r\n          count={products\r\n            .filter(row => shop !== 0\r\n              ? row.shopId === shop\r\n              : true)\r\n            .filter(row => category !== 0\r\n              ? row.categoryId === category\r\n              : true)\r\n            .filter(row => title !== ''\r\n              ? row.title.toLowerCase().includes(title.toLowerCase())\r\n              : true)\r\n            .length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));","import React, {useCallback, useEffect, useState} from 'react'\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {useHttp} from \"../../hooks/http.hook\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {Constants} from \"../../const\";\r\n\r\nconst API = Constants.API\r\n\r\nexport const ProductsHistory = () => {\r\n  const classes = useStyles()\r\n  const [products, setProducts] = useState([])\r\n  const [shops, setShops] = useState([])\r\n  const [shop, setShop] = useState(0)\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const {loading, request} = useHttp()\r\n  const [startDate, setStartDate] = useState(null)\r\n  const [endDate, setEndDate] = useState(null)\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeShop = (event) => {\r\n    setShop(event.target.value);\r\n  };\r\n\r\n  const getProducts = useCallback(async () => {\r\n    try {\r\n      const data = await request(API + 'api/productsHistory')\r\n      setProducts(data.map(product => (\r\n        {...product, date: new Date(product.dateTime)}\r\n      )))\r\n    }\r\n    catch (e) {}\r\n  }, [request])\r\n\r\n  const getShops = useCallback(async () => {\r\n    try {\r\n      const data = await request(API + 'api/shops')\r\n      setShops(data)\r\n    }\r\n    catch (e) {}\r\n  }, [request])\r\n\r\n  useEffect(() => {\r\n    getProducts()\r\n    getShops()\r\n  }, [getProducts, getShops])\r\n\r\n  return(\r\n    <>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\">Магазин</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={shop}\r\n          onChange={handleChangeShop}\r\n        >\r\n          <MenuItem value={0}>Выбрать магазин</MenuItem>\r\n          {shops.map(shop => (\r\n            <MenuItem key={shop.id} value={shop.id}>{shop.title}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <TextField\r\n          label=\"Дата с\"\r\n          type=\"date\"\r\n          defaultValue=\"\"\r\n          className={classes.textField}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          onChange={event => setStartDate(new Date(event.target.value))}\r\n        />\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <TextField\r\n          label=\"Дата по\"\r\n          type=\"date\"\r\n          defaultValue=\"\"\r\n          className={classes.textField}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          onChange={event => setEndDate(new Date(event.target.value))}\r\n        />\r\n      </FormControl>\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Дата</TableCell>\r\n              <TableCell>Товар</TableCell>\r\n              <TableCell>Количество</TableCell>\r\n              <TableCell>Поставщик</TableCell>\r\n              <TableCell>Тип</TableCell>\r\n              <TableCell>Магазин</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {products\r\n              .filter(row => shop !== 0\r\n                ? row.shopId === shop\r\n                : true)\r\n              .filter(row => startDate\r\n                ? row.date >= startDate\r\n                : true)\r\n              .filter(row => endDate\r\n                ? row.date <= endDate\r\n                : true)\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map(row => (\r\n              <TableRow key={row.id}>\r\n                <TableCell>{row.date.toLocaleDateString()}</TableCell>\r\n                <TableCell>{row.productTitle}</TableCell>\r\n                <TableCell>{row.amount}</TableCell>\r\n                <TableCell>{row.supplierName}</TableCell>\r\n                <TableCell>{row.type}</TableCell>\r\n                <TableCell>{row.shopTitle}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 50, 100]}\r\n        component='div'\r\n        count={products\r\n          .filter(row => shop !== 0\r\n            ? row.shopId === shop\r\n            : true)\r\n          .filter(row => startDate\r\n            ? row.date >= startDate\r\n            : true)\r\n          .filter(row => endDate\r\n            ? row.date <= endDate\r\n            : true)\r\n          .length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));","import React, {useCallback, useEffect, useState} from 'react'\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport {useHttp} from \"../../hooks/http.hook\";\r\n\r\nexport const ManagersPage = () => {\r\n  const {loading, request} = useHttp()\r\n  const [managers, setManagers] = useState([]);\r\n  \r\n  const getManagers = useCallback(async () => {\r\n    try {\r\n      const data = await request('http://localhost:5000/api/managers')\r\n      setManagers(data)\r\n    } \r\n    catch (e) {}\r\n  }, [request])\r\n  \r\n  useEffect(() => {\r\n    getManagers()\r\n  }, [getManagers])\r\n  \r\n  if(loading)\r\n    return (\r\n      <div>Загрузка...</div>\r\n    )\r\n  else\r\n    return (\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Имя</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {managers.map(row => (\r\n              <TableRow key={row.id}>\r\n                <TableCell>{row.name}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    )\r\n}","import React from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport List from \"@material-ui/core/List\";\r\n\r\nexport const Menu = () => {\r\n\r\n  return (\r\n    <List>\r\n      <ListItem button>\r\n        <NavLink to={'/admin/import'}>\r\n          <ListItemText primary={'Импорт'}/>\r\n        </NavLink>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <NavLink to={'/admin/managers'}>\r\n          <ListItemText primary={'Менеджеры'}/>\r\n        </NavLink>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <NavLink to={'/admin/products'}>\r\n          <ListItemText primary={'Все товары'}/>\r\n        </NavLink>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <NavLink to={'/admin/productsHistory'}>\r\n          <ListItemText primary={'История товаров'}/>\r\n        </NavLink>\r\n      </ListItem>\r\n    </List>\r\n  )\r\n}","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Menu} from \"../menu/menu\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  }\r\n}));\r\n\r\nexport const AdminLayout = props => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={1}>\r\n          <Menu/>\r\n        </Grid>\r\n        <Grid container item xs={11}>\r\n          {props.page}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}","import {createContext} from 'react'\r\n\r\n\r\nexport const AuthContext = createContext({\r\n  userId: null,\r\n  userRole: '',\r\n  isAuth: false\r\n})","import React, {useCallback, useState} from 'react';\nimport {BrowserRouter} from 'react-router-dom'\nimport {useRoutes} from \"./routes\";\nimport {AdminLayout} from \"./components/layouts/admin.layout\";\nimport {AuthContext} from \"./contexts/auth.context\";\nimport {useCookies} from \"react-cookie\";\n\nfunction App() {\n  const routes = useRoutes()\n  const [cookie] = useCookies()\n  //const [userRole] = useCookies(['userRole'])\n\n  const userId = cookie.userId\n  const userRole = cookie.userRole\n  const isAuth = !!userId\n\n  console.log(userRole)\n\n  if(userRole === 'Administrator')\n    return (\n      <AuthContext.Provider value={{\n        userId, userRole, isAuth\n      }}>\n        <BrowserRouter>\n          <AdminLayout page={routes} />\n        </BrowserRouter>\n      </AuthContext.Provider>\n    )\n\n  if(userRole === 'Manager')\n    return (\n      <h1>Manager</h1>\n    )\n\n  return (\n    <h1>Нет авторизации</h1>\n  )\n\n}\n\nexport default App;\n","import React from \"react\";\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\nimport {ImportPage} from \"./pages/admin/import.page\";\r\nimport {ProductsPage} from \"./pages/admin/products.page\";\r\nimport {ProductsHistory} from \"./pages/admin/products-history.page\";\r\nimport {ManagersPage} from \"./pages/admin/managers.page\";\r\n\r\nexport const useRoutes = () => {\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path='/admin/import' exact>\r\n        <ImportPage/>\r\n      </Route>\r\n      <Route path='/admin/products' exact>\r\n        <ProductsPage/>\r\n      </Route>\r\n      <Route path='/admin/productsHistory' exact>\r\n        <ProductsHistory/>\r\n      </Route>\r\n      <Route path='/admin/managers' exact>\r\n        <ManagersPage/>\r\n      </Route>\r\n      <Redirect to='/admin/import'/>\r\n    </Switch>\r\n  )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}