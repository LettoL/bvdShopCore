@using Data.Enums

@{
    Layout = "~/Views/Shared/AdminLayout.cshtml";
    ViewData["Title"] = "CloseSale";
    ViewData["Products"] = ViewBag.SalesProduct;
}

<div class="row">
    <div class="col-md-3"></div>
    <div class="col-md-6">
        <div id='closeSaleForm' class="portlet">
            <div class="portlet-title">
                <div class="portlet-head">
                    <h4>Закрыть продажу</h4>
                </div>
            </div>
            <div class="portlet-body">
                <form id="closeSale">
                    <h3 class="title">Закрытие</h3>
                    <input type="hidden" value="@Model.Id" name="saleId" />

                    <p style="font-size: 18px">Комментарий к продаже: <b> {{ comment }} </b></p>

                    <p style="font-size: 18px">Будет внесено по операции: <b> {{ rest }} </b></p>

                    <p style="font-size: 18px">Из них наличных: <b>{{ cashSum }}</b> и безналичных: <b>{{ cashlessSum
                            }}</b></p>

                    <h5>Список товаров:</h5>
                    <p style="font-size: 18px" v-for='product in products'>Название: {{product.title}} / Количество: {{product.amount}}</p>

                    <label>Зачислить наличные средства на:</label>
                    <select id="chooseMoneyWorkerCash" class="form-control"
                        onchange="selectMoneyWorkers(event.srcElement.id)">
                        @if (ViewBag.SaleInformation != null && ViewBag.SaleInformation.MoneyWorkerIdForIncome != null)
                        {
                            <option disabled selected>Счет выбран</option>
                        }
                        else
                        {
                            <option>Выбрать счет</option>
                        }
                        <option value="3">Касса магазина</option>
                    </select><br />
                    <select id="moneyWorkerCash" v-model='moneyWorkerCashId' name="moneyWorkerId" class="form-control">
                        @if (ViewBag.SaleInformation != null && ViewBag.SaleInformation.MoneyWorkerIdForIncome != null)
                        {
                            <option value="@ViewBag.SaleInformation.MoneyWorkerIdForIncome">
                                @ViewBag.SaleInformation.MoneyWorkerTitleForIncome</option>
                        }
                        else
                        {
                            <option selected disabled>Выбрать опцию</option>
                        }
                    </select><br />

                    <label>Зачислить безналичные средства на:</label>
                    <select id="chooseMoneyWorkerCashless" class="form-control"
                        onchange="selectMoneyWorkers(event.srcElement.id)">
                        @if (ViewBag.SaleInformation != null
                             && ViewBag.SaleInformation.MoneyWorkerIdForCashlessIncome != null)
                        {
                            <option disabled selected>Счет выбран</option>
                        }
                        else
                        {
                            <option>Выбрать счет</option>
                        }
                        <option value="1">Держатель карты</option>
                        <option value="2">Рассчетный счет</option>
                    </select><br />
                    <select 
                        id="moneyWorkerCashless" 
                        v-model='moneyWorkerCashlessId' 
                        name="moneyWorkerCashlessId"
                        class="form-control"
                    >
                        @if (ViewBag.SaleInformation != null 
                             && ViewBag.SaleInformation.MoneyWorkerIdForCashlessIncome != null)
                        {
                            <option 
                                value="@ViewBag.SaleInformation.MoneyWorkerIdForCashlessIncome"
                            >
                                @ViewBag.SaleInformation.MoneyWorkerTitleForCashlessIncome
                            </option>
                        }
                        else
                        {
                            <option selected disabled>Выбрать опцию</option>
                        }
                    </select><br />

                    <label>Выбрать Поставщика</label>
                    <select v-model='supplierId' name="supplierId" class="form-control">
                        @if (ViewBag.SelectedSupplier != null)
                        {
                            <option value="@ViewBag.SelectedSupplier.Id">@ViewBag.SelectedSupplier.Title</option>
                        }
                        @foreach (var sup in ViewBag.Suppliers)
                        {
                            <option value="@sup.Id">@sup.Title</option>
                        }
                    </select><br />
                    <select v-model='realization' name="realization" class="form-control">
                        <option value="true">Под реализацию</option>
                        <option value="false">Оплаченный товар</option>
                    </select><br />

                    <div id="productPrice" v-for='product in products' :key='product.id'>

                        <label>Стоимость Товара: <b>{{product.title}}</b></label> <br />


                        <label asp-for="code">Закупочная стоимость за 1 шт</label>
                        <input class="form-control procurementCosts" type="text" v-model='product.procurementCost'> <br />

                    </div>

                    <hr />

                    <label asp-for="title">Дополнительная стоимость</label>
                    <input v-model='additionalCost' id="additionalCost" class="form-control" type="text" value="0"
                        name="additionalCost"><br />

                    <label asp-for="code">Общая стоимость за товары</label>
                    <input v-model='totalCost' value="0" id="totalCost" class="form-control" type="text"
                        name="totalCost"><br />

                    <button id="count" v-on:click='countTotal' class="btn btn-dark" type="button">Рассчитать</button>
                    <button id="submitForm" v-on:click='sendData' class="btn btn-submit">Сохранить</button>
                    <a href="/Admin/Index" class="btn btn-dark">Назад</a>
                </form>
            </div>

        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/vue@2.5.16/dist/vue.js"></script>
<script type="text/javascript">

    const closeSaleForm = new Vue({
        el: '#closeSaleForm',
        data: {
            saleId: '@Model.Id',
            comment: '@Model.Comment',
            rest: '@ViewBag.Rest',
            cashSum: '@Model.CashSum',
            cashlessSum: '@Model.CashlessSum',
            moneyWorkerCashId: '@ViewBag.SaleInformation.MoneyWorkerIdForIncome',
            moneyWorkerCashlessId: '@ViewBag.SaleInformation.MoneyWorkerIdForCashlessIncome',
            supplierId: '@ViewBag.SelectedSupplier.Id',
            realization: 'true',
            additionalCost: 0,
            totalCost: 0,
            products: []
        },
        methods: {
            countTotal() {
                let result = 0;

                for(let product of this.products) {
                    result += product.procurementCost * product.amount
                }

                this.totalCost = +result + +this.additionalCost;
            },
            setMoneyWorkerId(type, id) {
                if (type === 'cash')
                    this.moneyWorkerCashId = id;
                else
                    this.moneyWorkerCashlessId = id;
            },
            sendData() {
                $('#submitForm').attr("disabled", true);

                const products = this.products.map(p => {
                    return {
                        id: +p.id,
                        amount: +p.amount,
                        procurementCost: +p.procurementCost,
                        title: p.title
                    }
                })

                const closeSaleData = {
                    saleId: +this.saleId,
                    realization: JSON.parse(this.realization.toLowerCase()),
                    moneyWorkerId: +this.moneyWorkerCashId,
                    moneyWorkerCashlessId: +this.moneyWorkerCashlessId,
                    supplierId: +this.supplierId,
                    products: products,
                    additionalCost: +this.additionalCost
                }

                return fetch("/Admin/CloseSale", {
                    method: "POST",
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    redirect: "follow",
                    credentials: 'include',
                    body: JSON.stringify(closeSaleData)
                })
                .then(res => window.location.href = res.url)
            }
        },
        created: function () {
            fetch(`/Admin/CloseSaleProducts/${this.saleId}`, {
                headers: { 'Content-Type': 'application/json' },
                credentials: 'include'
            })
                .then((res) => {
                    return res.json()
                })
                .then((res) => {
                    this.products = res;
                })
        }
    })


    function selectMoneyWorkers(event) {

        if (event == "chooseMoneyWorkerCash")
            moneyWorkerSelect = document.getElementById('chooseMoneyWorkerCash');

        else if (event == "chooseMoneyWorkerCashless")
            moneyWorkerSelect = document.getElementById('chooseMoneyWorkerCashless');

        let moneyWorkerValue = moneyWorkerSelect.options[moneyWorkerSelect.selectedIndex].value;

        fetch('/Admin/GetMoneyWorkers/' + moneyWorkerValue,
            {
                headers: { "Content-Type": "application/json" },
                credentials: 'include'
            })
            .then((res) => {
                return res.json();
            })
            .then((json) => {
                if (event == "chooseMoneyWorkerCash") {
                    $('#moneyWorkerCash').html('');

                    closeSaleForm.setMoneyWorkerId('cash', json[0].id)

                    json.forEach(json => {
                        $('#moneyWorkerCash').append('<option value="' +
                            json.id +
                            '">' +
                            json.title +
                            '</option>');
                    });
                }
                else {
                    $('#moneyWorkerCashless').html('');

                    closeSaleForm.setMoneyWorkerId('cashless', json[0].id)

                    json.forEach(json => {
                        $('#moneyWorkerCashless').append('<option value="' +
                            json.id +
                            '">' +
                            json.title +
                            '</option>');
                    });
                }
            });
    }

 

</script>
