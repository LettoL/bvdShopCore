@{
    ViewData["Title"] = "AcceptanceRecord";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}


<style>
  .portlet-head {
    display: flex;
    justify-content: flex-start;
    align-items: center;
  }
  .portlet-head .form-control {
    min-width: 220px;
    margin-right: 10px;
  }
  .portlet-head label {
    margin-right: 10px;
    min-width: 70px;
  }
  table {
    width: 100%
  }
  table th {
    font-size: 18px;
  }
</style>

<div id="acceptanceRecord">
  <div class="portlet">
    <div class="portlet-title">
      <div class="portlet-head">
        <select class="form-control" v-model='searchParams.supplierId'>
          <option value="0">Выбрать поставщика</option>
          <option v-for="item in suppliers" :key='item.id' :value="item.id">{{item.title}}</option>
        </select>
        <div>
          <label>Дата с:</label>
        </div>    
        <input id='dateFilter1' placeholder="Дата с:" class="form-control" type='text' />
        <label>Дата по:</label>
        <input id='dateFilter2' placeholder="Дата по:" class="form-control" type='text' />
        <button v-on:click='getData()' class="btn btn-dark">Показать</button>
      </div>
    </div>
  </div>

  <div class="portlet">
    <div class="portlet-body">
      <table class="table">
        <template v-if='!records.dates?.length'><h4>Введите параметры поиска...</h4></template>
        <tbody v-if='records.dates?.length'>         
          <tr>
            <th colspan='2'></th>
            <th>Стоимость товара</th>
            <th>Сумма оплаты</th>
          </tr> 
          <template v-for='item in records.dates'>             
            <tr>
              <th colspan='4'>Дата: {{item.date}}</th>
            </tr>     
            <tr v-if='item.supplieds.length'>
              <th colspan='4'>Поступление товара</th>
            </tr>  
            <template v-for='supply in item.supplieds'>                              
              <tr>
                <td>{{supply.productTitle}}</td>
                <td>{{supply.amount}} шт. x {{supply.priceOfUnit}} руб.</td>
                <td>{{supply.priceSum}} руб</td>
              </tr>
            </template>
            <tr v-if='item.payments.length'>
              <th colspan='4'>Оплата</th>
            </tr> 
            <template v-for='payment in item.payments'>                      
              <tr>
                <td colspan='3'></td>
                <td>{{payment.sum}} руб.</td>
              </tr>
            </template>
          </template>
        </tbody>
        <tfoot v-if='records.dates'>
          <tr>
            <th colspan="2">Итого:</th>
            <th>{{records.priceSumTotal}} руб.</th>
            <th>{{records.paymentSumTotal}} руб.</th>
          </tr>
        </tfoot>
      </table>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/vue@2.5.16/dist/vue.js"></script>
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

<script>
  const List = new Vue({
    el: '#acceptanceRecord',
    data: {
      records: [],
      suppliers: [],
      searchParams: {
        dateFromStr: '',
        dateForStr: '',
        supplierId: 0
      }
    },
    methods: {
      getData: function () {
        fetch('/Admin/AcceptanceRecordData?' + new URLSearchParams({
          fromDateStr: this.searchParams.dateFromStr,
          forDateStr: this.searchParams.dateForStr,
          supplierId: this.searchParams.supplierId
        }))
          .then(data => data.json())
          .then(data => this.records = data)
      },
      setDateFrom: function(value) {
        this.searchParams.dateFromStr = this.formateDate(value);
      },
      setDateFor: function(value) {
        this.searchParams.dateForStr = this.formateDate(value);
      },
      formateDate: function(date) {
          const result = date.split('.').reverse().join('-');
          return result;
      }
    },
    created: function() {
      fetch('/Supplier/GetAll')
        .then(data => data.json())
        
        .then(suppliers => this.suppliers = suppliers)
    }   
    
  })

</script>

<script>
    (function (factory) {
        if (typeof define === "function" && define.amd) {

            define(["../widgets/datepicker"], factory);
        } else {

            factory(jQuery.datepicker);
        }
    }(function (datepicker) {

        datepicker.regional.ru = {
            closeText: "Закрыть",
            prevText: "&#x3C;Пред",
            nextText: "След&#x3E;",
            currentText: "Сегодня",
            monthNames: ["Январь", "Февраль", "Март", "Апрель", "Май", "Июнь",
                "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь", "Декабрь"],
            monthNamesShort: ["Янв", "Фев", "Мар", "Апр", "Май", "Июн",
                "Июл", "Авг", "Сен", "Окт", "Ноя", "Дек"],
            dayNames: ["воскресенье", "понедельник", "вторник", "среда", "четверг", "пятница", "суббота"],
            dayNamesShort: ["вск", "пнд", "втр", "срд", "чтв", "птн", "сбт"],
            dayNamesMin: ["Вс", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"],
            weekHeader: "Нед",
            dateFormat: "dd.mm.yy",
            firstDay: 1,
            isRTL: false,
            showMonthAfterYear: false,
            yearSuffix: ""
        };
        datepicker.setDefaults(datepicker.regional.ru);

        return datepicker.regional.ru;

    }));

    $(function () {
        $.datepicker.setDefaults($.datepicker.regional["ru"]);
        $("#dateFilter1").datepicker({
          onSelect: function (dateText) {
            List.setDateFrom(dateText)
          },     
        });
        $("#dateFilter2").datepicker({
          onSelect: function (dateText) {
            List.setDateFor(dateText)
          }
        });
    });
</script>